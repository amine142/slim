version: 0.2
phases:
 install:
   commands:
     - |
         export DEBIAN_FRONTEND=noninteractive

         #Install php7.1
         apt-get update
         apt-get install -y  software-properties-common
         LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php
         apt-get update

         # Install PHP
         apt-get install -y php7.4\
                  php7.4-ldap \
                  php7.4-xml \
                  php7.4-xmlrpc \
                  php7.4-zip \
                  php7.4-mysql \
                  php7.4-mbstring \
                  php7.4-mcrypt \
                  php7.4-gd \
                  php7.4-readline \
                  php7.4-opcache \
                  php7.4-xdebug \
                  php7.4-dom \
                  php-xdebug \
                  php7.4-curl \
                  php7.4-pdo \
                  unzip \
                  wget
         #Enable xdebug - phpunit uses this for code coverage
         phpenmod xdebug
         #Install composer
        
         #Various handy node based dev tools - do you need these during your build? Comment if not.
         #npm install -g gulp
         #npm install -g grunt
         #npm install -g webpack

     # Start Mysql if you need it
     # - apt-get install -y mysql-server
     # - su mysql -s /bin/bash -c "/usr/sbin/mysqld" &
 build:
   commands: 
     - composer install -o
     - composer update -o

 post_build:
   commands:
     - echo Build completed on `date`
     # Do you need to do this? In many cases phpunit will use sqllite or similar to avoid the need for a real DB.
     # If you don't need it delete it
     # - /usr/bin/mysql  -u root -e "GRANT ALL ON *.* TO 'test'@'localhost' IDENTIFIED BY '' WITH GRANT OPTION"
     # - mysqladmin -u test create test    
artifacts:
  files:
    - '**/*'
